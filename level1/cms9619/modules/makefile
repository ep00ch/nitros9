include ../port.mak

vpath %.asm $(LEVEL1)/modules

AFLAGS		+= --includedir=$(LEVEL1)/modules

DEPENDS		= ./makefile
TPB		= $(3RDPARTY)/booters

BOOTERS		= boot_zm boot_dw_cm6551 boot_dw_cm6821

BOOTTRACK	= rel init0 $(BOOTERS)

KERNEL		= krn_cms krn_cms_rom krnp2
SYSMODS		= ioman init_cms init0_rom sysgo sysgo_rom vectors_cms
CLOCKS	        = clock clock2_cms

RBF		= rbf.mn \
		rbdw.dr dwio.sb dwio_cm6551.sb dwio_cm6821.sb \
		ddx0.dd x0.dd x1.dd x2.dd x3.dd


SCF		= scf.mn vrn.dr nil.dd \
		scbbp.dr p_scbbp_cms.dd p_scbbp_cms.dd \
		cm6551.dr t0_cm6551.dd t1_cm6551.dd term_cm6551.dt

SIO		= sc6850.dr \
		t2_cm6850.dc t3_cm6850.dc t4_cm6850.dc t5_cm6850.dc \
		t6_cm6850.dc t7_cm6850.dc t8_cm6850.dc t9_cm6850.dc


PIPE		= pipeman.mn \
		piper.dr \
		pipe.dd


ALLOBJS		= $(BOOTTRACK) $(KERNEL) $(SYSMODS) $(CLOCKS) $(RBF) $(SCF) $(PIPE) $(DW) cms_9650.dr
AUTOGEN		= cm6551.asm term_cm6551.asm t0_cm6551.asm t1_cm6551.asm\
		init_cms.asm p_scbbp_cms.asm scbbp.dr \
		$(SIO)


# Putting $(AUTOGEN) here keeps those files beyond the build.
all:	$(ALLOBJS) $(AUTOGEN)


# Kernel
$(KERNEL):
	$(CD) kernel; make $@
	$(CP) kernel/$@ .

%_rom: %.asm
	$(AS) -l$@.lst $(AFLAGS) $(ASOUT)$@ $< -DROM=1


cm6551.asm: sc6551.asm
	$(ECHO) "** Generated by makefile from $<" > $@
	# I think this was supposed to be a preprocessor flag, not a hard equate.
	sed -e 's/^MPIFlag/* MPIFlag/' \
		$< >> $@



# Generate terminal source based on output file name prefix
t%_cm6551.asm: term_sc6551.asm
	$(ECHO) "** Generated by makefile from $<" > $@
	sed -e 's/nam   Term/nam   T$*/' \
		-e 's/\/Term\//\/t$*\//' \
		-e 's/.FF68/t$*Base/' \
		-e 's/.FF22/t$*Base/' \
		-e 's/B9600/B19200/' \
		$< >> $@

# Generate CMS 9650A SERIAL I/O card terminal source based on output file name prefix
t%_cm6850.asm: term_sc6850.asm
	$(ECHO) "** Generated by makefile from $<" > $@
	sed -e 's/nam   Term/nam   T$*/' \
		-e 's/\/Term\//\/t$*\//' \
		$< >> $@

# Generate SERIAL I/O card terminals based on output file name prefix
# Extension should be dd, but not overriding default rule in rules.mak for some reason.
t%_cm6850.dc: t%_cm6850.asm
	$(AS) $< $(ASOUT)$@ $(AFLAGS) -DHwBASE=t$*Base

cms_9650.dr:	$(SIO)
	$(MERGE) $^ > $@

# Generate printers based on output file name prefix
p_%_cms.asm: p_%.asm
	$(ECHO) "** Generated by makefile from $<" > $@
	sed -e 's/.FF22/pBase/' \
		$< >> $@

# Make minor changes to some of the standard modules
%_cms.asm: %.asm
	$(ECHO) "** Generated by makefile from $<" > $@
	sed -e 's/\$$8015/\ROMBase+2/' \
	    -e 's/Unknown Machine/$(MACHINE)/' $< >> $@

# DriveWire on ACIA0 Booter. Changes needed b/c no ACIA Init included
boot_dw_cm6551:	boot_dw.asm
	#This dw init code should be handled init0 and krn_cms now
	#$(ECHO) "** Generated by makefile from $<" > $@.asm
	#sed -e 's/use       dwinit.asm/use       dwinit_cms.asm/' $< >> $@.asm
	#$(AS) -l$@.lst $@.asm $(ASOUT)$@ $(AFLAGS) -DSY6551N=1
	$(AS) -l$@.lst $< $(ASOUT)$@ $(AFLAGS) -DSY6551N=1

	

# DriveWire on PIA1 with TTL to RS232 or USB adapter Booter
boot_dw_cm6821:	boot_dw.asm 
	$(AS) -l$@.lst $< $(ASOUT)$@ $(AFLAGS) 
	#-DBAUD38400=1 -DDW_DBAUD38400=1


# DriveWire on ACIA0 Submodule
dwio_cm6551.sb:	dwio.asm
	$(AS) -l$@.lst $< $(ASOUT)$@ $(AFLAGS) -DSY6551N=1


# DriveWire on PIA1 with TTL to RS232 or USB adapter Submodule
dwio_cm6821.sb:	dwio.asm
	$(AS) -l$@.lst $< $(ASOUT)$@ $(AFLAGS)


# DriveWire 3 RBF descriptors
ddx%.dd: dwdesc.asm
	$(AS) $< $(ASOUT)$@ $(AFLAGS) -DDD=1 -DDNum=$*


x%.dd: dwdesc.asm
	$(AS) $< $(ASOUT)$@ $(AFLAGS) -DDNum=$*


clean:
	$(RM) $(ALLOBJS) $(AUTOGEN)
	$(CD) kernel; make $@
	$(RM) *.lst
	$(RM) kernel/*.lst

showobjs:
	@$(ECHO) $(ALLOBJS)

showkernel:
	@$(ECHO) $(KERNEL)

showsysmods:
	@$(ECHO) $(SYSMODS)

showclocks:
	@$(ECHO) $(CLOCKS)

showrbf:
	@$(ECHO) $(RBF)

showscf:
	@$(ECHO) $(SCF)

showpipe:
	@$(ECHO) $(PIPE)

identify:
	$(IDENT_SHORT) $(ALLOBJS)


